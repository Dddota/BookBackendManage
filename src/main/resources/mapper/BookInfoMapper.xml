<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bdqn.dao.BookInfoMapper">
    <resultMap id="BaseResultMap" type="com.bdqn.entity.BookInfo">
        <id column="bookId" jdbcType="INTEGER" property="bookId" />
        <result column="bookCode" jdbcType="VARCHAR" property="bookCode" />
        <result column="bookName" jdbcType="VARCHAR" property="bookName" />
        <result column="bookType" jdbcType="VARCHAR" property="bookType" />
        <result column="bookAuthor" jdbcType="VARCHAR" property="bookAuthor" />
        <result column="publishPress" jdbcType="VARCHAR" property="publishPress" />
        <result column="publishDate" jdbcType="TIMESTAMP" property="publishDate" />
        <result column="borrowed" jdbcType="INTEGER" property="borrowed" />
        <result column="createdBy" jdbcType="VARCHAR" property="createdBy" />
        <result column="creationTime" jdbcType="TIMESTAMP" property="creationTime" />
        <result column="lastUpdatetime" jdbcType="TIMESTAMP" property="lastUpdatetime" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    bookId, bookCode, bookName, bookType, bookAuthor, publishPress, publishDate, borrowed, 
    createdBy, creationTime, lastUpdatetime
  </sql>
    <select id="selectByExample" parameterType="com.bdqn.entity.BookInfoExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from book_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from book_info
        where bookId = #{bookId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book_info
    where bookId = #{bookId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.bdqn.entity.BookInfoExample">
        delete from book_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" keyColumn="bookId" keyProperty="bookId" parameterType="com.bdqn.entity.BookInfo" useGeneratedKeys="true">
    insert into book_info (bookCode, bookName, bookType, 
      bookAuthor, publishPress, publishDate, 
      borrowed, createdBy, creationTime, 
      lastUpdatetime)
    values (#{bookCode,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, #{bookType,jdbcType=VARCHAR}, 
      #{bookAuthor,jdbcType=VARCHAR}, #{publishPress,jdbcType=VARCHAR}, #{publishDate,jdbcType=TIMESTAMP}, 
      #{borrowed,jdbcType=INTEGER}, #{createdBy,jdbcType=VARCHAR}, #{creationTime,jdbcType=TIMESTAMP}, 
      #{lastUpdatetime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" keyColumn="bookId" keyProperty="bookId" parameterType="com.bdqn.entity.BookInfo" useGeneratedKeys="true">
        insert into book_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bookCode != null">
                bookCode,
            </if>
            <if test="bookName != null">
                bookName,
            </if>
            <if test="bookType != null">
                bookType,
            </if>
            <if test="bookAuthor != null">
                bookAuthor,
            </if>
            <if test="publishPress != null">
                publishPress,
            </if>
            <if test="publishDate != null">
                publishDate,
            </if>
            <if test="borrowed != null">
                borrowed,
            </if>
            <if test="createdBy != null">
                createdBy,
            </if>
            <if test="creationTime != null">
                creationTime,
            </if>
            <if test="lastUpdatetime != null">
                lastUpdatetime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="bookCode != null">
                #{bookCode,jdbcType=VARCHAR},
            </if>
            <if test="bookName != null">
                #{bookName,jdbcType=VARCHAR},
            </if>
            <if test="bookType != null">
                #{bookType,jdbcType=VARCHAR},
            </if>
            <if test="bookAuthor != null">
                #{bookAuthor,jdbcType=VARCHAR},
            </if>
            <if test="publishPress != null">
                #{publishPress,jdbcType=VARCHAR},
            </if>
            <if test="publishDate != null">
                #{publishDate,jdbcType=TIMESTAMP},
            </if>
            <if test="borrowed != null">
                #{borrowed,jdbcType=INTEGER},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="creationTime != null">
                #{creationTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdatetime != null">
                #{lastUpdatetime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.bdqn.entity.BookInfoExample" resultType="java.lang.Long">
        select count(*) from book_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update book_info
        <set>
            <if test="record.bookId != null">
                bookId = #{record.bookId,jdbcType=INTEGER},
            </if>
            <if test="record.bookCode != null">
                bookCode = #{record.bookCode,jdbcType=VARCHAR},
            </if>
            <if test="record.bookName != null">
                bookName = #{record.bookName,jdbcType=VARCHAR},
            </if>
            <if test="record.bookType != null">
                bookType = #{record.bookType,jdbcType=VARCHAR},
            </if>
            <if test="record.bookAuthor != null">
                bookAuthor = #{record.bookAuthor,jdbcType=VARCHAR},
            </if>
            <if test="record.publishPress != null">
                publishPress = #{record.publishPress,jdbcType=VARCHAR},
            </if>
            <if test="record.publishDate != null">
                publishDate = #{record.publishDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.borrowed != null">
                borrowed = #{record.borrowed,jdbcType=INTEGER},
            </if>
            <if test="record.createdBy != null">
                createdBy = #{record.createdBy,jdbcType=VARCHAR},
            </if>
            <if test="record.creationTime != null">
                creationTime = #{record.creationTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.lastUpdatetime != null">
                lastUpdatetime = #{record.lastUpdatetime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update book_info
        set bookId = #{record.bookId,jdbcType=INTEGER},
        bookCode = #{record.bookCode,jdbcType=VARCHAR},
        bookName = #{record.bookName,jdbcType=VARCHAR},
        bookType = #{record.bookType,jdbcType=VARCHAR},
        bookAuthor = #{record.bookAuthor,jdbcType=VARCHAR},
        publishPress = #{record.publishPress,jdbcType=VARCHAR},
        publishDate = #{record.publishDate,jdbcType=TIMESTAMP},
        borrowed = #{record.borrowed,jdbcType=INTEGER},
        createdBy = #{record.createdBy,jdbcType=VARCHAR},
        creationTime = #{record.creationTime,jdbcType=TIMESTAMP},
        lastUpdatetime = #{record.lastUpdatetime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.bdqn.entity.BookInfo">
        update book_info
        <set>
            <if test="bookCode != null">
                bookCode = #{bookCode,jdbcType=VARCHAR},
            </if>
            <if test="bookName != null">
                bookName = #{bookName,jdbcType=VARCHAR},
            </if>
            <if test="bookType != null">
                bookType = #{bookType,jdbcType=VARCHAR},
            </if>
            <if test="bookAuthor != null">
                bookAuthor = #{bookAuthor,jdbcType=VARCHAR},
            </if>
            <if test="publishPress != null">
                publishPress = #{publishPress,jdbcType=VARCHAR},
            </if>
            <if test="publishDate != null">
                publishDate = #{publishDate,jdbcType=TIMESTAMP},
            </if>
            <if test="borrowed != null">
                borrowed = #{borrowed,jdbcType=INTEGER},
            </if>
            <if test="createdBy != null">
                createdBy = #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="creationTime != null">
                creationTime = #{creationTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdatetime != null">
                lastUpdatetime = #{lastUpdatetime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where bookId = #{bookId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bdqn.entity.BookInfo">
    update book_info
    set bookCode = #{bookCode,jdbcType=VARCHAR},
      bookName = #{bookName,jdbcType=VARCHAR},
      bookType = #{bookType,jdbcType=VARCHAR},
      bookAuthor = #{bookAuthor,jdbcType=VARCHAR},
      publishPress = #{publishPress,jdbcType=VARCHAR},
      publishDate = #{publishDate,jdbcType=TIMESTAMP},
      borrowed = #{borrowed,jdbcType=INTEGER},
      createdBy = #{createdBy,jdbcType=VARCHAR},
      creationTime = #{creationTime,jdbcType=TIMESTAMP},
      lastUpdatetime = #{lastUpdatetime,jdbcType=TIMESTAMP}
    where bookId = #{bookId,jdbcType=INTEGER}
  </update>
    <select id="selectByName" resultMap="BookList" parameterType="string">
    SELECT bookId,bookCode,bookname,typeName,bookAuthor,publishPress,borrowed,createdBy,creationTime
    FROM `book_info`
    INNER JOIN book_type ON bookType= book_type.id
    <if test="name != null ">
        WHERE bookName LIKE CONCAT('%', #{name}, '%')
    </if>
    </select>
    <resultMap id="BookList" type="com.bdqn.entity.BookInfo">
        <result column="bookCode" jdbcType="VARCHAR" property="bookCode" />
        <result column="bookName" jdbcType="VARCHAR" property="bookName" />
        <result column="typeName" jdbcType="VARCHAR" property="bookTypeName" />
        <result column="bookAuthor" jdbcType="VARCHAR" property="bookAuthor" />
        <result column="publishPress" jdbcType="VARCHAR" property="publishPress" />
        <result column="publishDate" jdbcType="TIMESTAMP" property="publishDate" />
        <result column="borrowed" jdbcType="INTEGER" property="borrowed" />
        <result column="createdBy" jdbcType="VARCHAR" property="createdBy" />
        <result column="creationTime" jdbcType="TIMESTAMP" property="creationTime" />
        <result column="lastUpdatetime" jdbcType="TIMESTAMP" property="lastUpdatetime" />
    </resultMap>
</mapper>